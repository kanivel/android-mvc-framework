#summary ver0.1の全体アーキテクチャと設計パターンを俯瞰（図表つき）

<br>

= ver0.1 / 全体のアーキテクチャと設計 =


本フレームワークの，現時点での全体アーキテクチャ。

<br>
<hr>

== フレームワークの全体像 ==

設計の概要を以下に示す。

 * フレームワークの基本構造として，<b>MVCパターン</b>を採用している。

 * 各レイヤ内では，各種の<b>デザインパターン</b>を採用している。

 * その他，可能な限り<b>デファクトスタンダード</b>な手法を盛り込んでいる。
   * したがって，習得しやすく，利用しやすく，メンテナンスしやすい。

 * しかし同時に<b>「モダンな発想」</b>を意欲的に取り入れている。
   * したがって，<b>スピーディーで柔軟なAndroidアプリ開発</b>が可能になる。

<br>

設計の全体像を要約した簡易クラス図は，下記の通り。

http://android-mvc-framework.googlecode.com/files/ver0.1%E3%82%AF%E3%83%A9%E3%82%B9%E6%A6%82%E8%A6%81.png


<br>
<hr>

== クラスパッケージ ==

本フレームワーク内のJavaパッケージ構造を以下に示す。

なお，ver0.1の段階では未実装のパッケージも含まれる。



com
└─android_mvc
    ├─framework              : フレームワークのルート。-------------- ↓ここからフレームワーク↓ --------------
    │  ├─activities
    │  │  └─installation   : アプリのインストール処理の基底
    │  │          
    │  ├─annotations        : FW側のアノテーション
    │  │      
    │  ├─bat                : Service関連
    │  │      
    │  ├─common             : FW内の共通処理ユーティリティ
    │  │      
    │  ├─controller         : FW側のC層の基底
    │  │      
    │  ├─db                 : 永続化レイヤ関連の基底。RDBおよびプリファレンス
    │  │  │  
    │  │  ├─dao            : データソースに接続するためのインタフェースの基底
    │  │  │      
    │  │  ├─entity         : エンティティの基底
    │  │  │      
    │  │  ├─schema         : スキーマ定義のユーティリティ
    │  │  │      
    │  │  └─transaction    : トランザクション管理ユーティリティ
    │  │          
    │  ├─map                : MapView利用のユーティリティ
    │  │      
    │  ├─net                : NW通信のユーティリティ
    │  │      
    │  ├─task               : 非同期タスクのユーティリティ
    │  │      
    │  └─ui                 : UIのユーティリティ
    │      │  
    │      └─view           : FW内の独自拡張View
    │
    │     ----------------------------------------------------------- ↑ここまでフレームワーク↑ --------------
    │
    └─sample_project -------------↓ここからは，フレームワークを利用した個別のアプリケーション↓--------------
        ├─activities
        │  ├─func_db        : 機能名ごとにactivitiesパッケージ内を分割する。
        │  │      
        │  ├─installation   : アプリのインストール処理関連
        │  │  │  
        │  │  └─lib
        │  │          
        │  └─main           : ここではトップ画面関連
        │          
        ├─annotations        : ユーザ定義アノテーション
        │      
        ├─bat                : Serviceの実装
        │      
        ├─common             : ユーザ定義の共通処理
        │      
        ├─controller         : C層の実装
        │      
        ├─db                 : 永続化レイヤの実装
        │  ├─dao            : DAOの実装
        │  │          
        │  ├─entity         : 論理エンティティの実装
        │  │  │  
        │  │  └─lib
        │  │          
        │  └─schema         : RDBのスキーマ定義
        │          
        └─domain             : ビジネスロジックの実装

           --------------------------------------------------- ↑ここまでが個別アプリケーション↑ --------------





<br>
<hr>

== 今後 ==

本フレームワークの設計は，ver0.2以降においても改良を重ねてゆく。



　